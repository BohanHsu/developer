package longestConsecutiveSequence;

import java.util.HashSet;
import java.util.Iterator;

public class Solution {
    HashSet<Integer> hs = new HashSet<Integer>();
    public int longestConsecutive(int[] num) {
        for (int i = 0; i < num.length; i++){
            hs.add(num[i]);
        }
        int max = 0;
        int x = 0;
        int cur = 0;
        
        //
        System.out.println(hs);
        
        Iterator<Integer> it = hs.iterator();
        
        while(it.hasNext()){
            x = it.next();
//            System.out.println(x);
            cur = check(x) + checkLess(x) + checkGreater(x);
            if (cur > max){
            	System.out.println(x+","+cur);
                max = cur;
            }
        }
        return max;
    }
    
    private int check(int x){
        if (this.hs.contains(x)){
//            this.hs.remove(x);
            return 1;
        } else{
            return 0;
        }
    }
    
    private int checkLess(int x){
        int c = check(x-1);
        if (c == 1){
            return c + checkLess(x-1);
        } else{
            return c;
        }
    }
    
    private int checkGreater(int x){
        int c = check(x+1);
        if (c == 1){
            return c + checkLess(x+1);
        } else{
            return c;
        }
    }
    
    public static void main(String[] args) {
		Solution s = new Solution();
		int[] num = new int[]{100, 4, 200, 1, 3, 2};
		System.out.println(s.longestConsecutive(num));
	}
}